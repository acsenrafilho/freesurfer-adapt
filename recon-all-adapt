#!/bin/bash
usage(){
  echo "  Script to adapt the FreeSurfer pipeline."
  echo "    Usage: $(basename $0) <T1 image> <Brain extraction type [BET|3dSS|oBET|ROBEX]>"
  echo ""
  echo "    <T1 image> = The T1 data in Nifti format."
  echo "    <Brain extraction type> = BET: FSL-BET | 3dSS: EdSKullStrip (AFNI) | oBET: optiBET | ROBEX: ROBEX method"
  echo ""
  echo "    NOTE: All brain extraction variables are set in the conf_variable.conf file."
  echo
}

if [[ $# -lt 2 ]]; then
  usage
  exit
fi

#Check if FSL is installed in the system
if [[ `which fsl` == "" ]]; then
  echo "  FSL is missing! Please intall FSL before using this script."
  echo "  More information in the website: http://fsl.fmrib.ox.ac.uk/fsl/fslwiki/"
  echo ""
  echo "recon-all-adapt terminated. (I'll be back!)"
  exit
fi


T1_IMAGE=$1
BET_METHOD=$2

if [[ $BET_METHOD == "oBET" ]]; then
  # Check environment variables
  if [[ `which optiBET.sh` == "" ]]; then
    echo "optiBET may not be installed in the system. Check if exist the optiBET.sh environment variable."
    exit
  fi

  cd $(dirname $1)
  echo " --> Performing optiBET brain extraction"
  USE_AFNI=`cat $(dirname $0)/config_variables.conf | grep USE_AFNI= | cut -c10-11`
  echo " Variables: "
  echo "   USE_AFNI=$USE_AFNI"
  if [[ $USE_AFNI == "Y" ]]; then
    optiBET.sh -i ${T1_IMAGE} -a
    rm ${T1_IMAGE%.*.*}_optiBET_brain.nii.gz
  else
    optiBET.sh -i ${T1_IMAGE}
    rm ${T1_IMAGE%.*.*}_optiBET_brain.nii.gz
  fi

  echo " --> Correcting mask"
  fslmaths $(basename ${T1_IMAGE%.*.*})_optiBET_brain_mask.nii.gz -kernel sphere 3 -dilM -fillh -ero $(basename ${T1_IMAGE%.*.*})_optiBET_brain_mask.nii.gz
  fslmaths $(basename ${T1_IMAGE%.*.*})_optiBET_brain_mask.nii.gz -kernel sphere 2 -dilM $(basename ${T1_IMAGE%.*.*})_optiBET_brain_mask.nii.gz

  echo " --> Adapting and performing FreeSurfer recon-all"
  MASK_IMAGE=$(basename ${T1_IMAGE%.*.*})_optiBET_brain_mask.nii.gz

  #Run the first part of FreeSurfer pipeline - autorecon1 -noskullstrip
  recon-all -s $(basename ${T1_IMAGE%.*.*})-oBET -sd $(dirname $1) -i $T1_IMAGE -autorecon1 -noskullstrip

  WHOLE_T1_FOLDER=$(basename ${T1_IMAGE%.*.*})-oBET/mri/
  mri_convert -it mgz -ot nii $WHOLE_T1_FOLDER/T1.mgz $WHOLE_T1_FOLDER/T1.nii
  gzip -9 $WHOLE_T1_FOLDER/T1.nii
  mri_convert -it nii -ot nii $MASK_IMAGE $MASK_IMAGE --conform
  #Effectivelly performing the skull strip on T1 image
  fslmaths $WHOLE_T1_FOLDER/T1.nii.gz -mas $MASK_IMAGE $WHOLE_T1_FOLDER/brainmask.auto.nii.gz
  gzip -d $WHOLE_T1_FOLDER/brainmask.auto.nii.gz
  mri_convert -it nii -ot mgz $WHOLE_T1_FOLDER/brainmask.auto.nii $WHOLE_T1_FOLDER/brainmask.auto.mgz
  cp $WHOLE_T1_FOLDER/brainmask.auto.mgz $WHOLE_T1_FOLDER/brainmask.mgz

   #Running the rest of FreeSurfer pipeline
   recon-all -s $(basename ${T1_IMAGE%.*.*})-oBET -sd $(dirname $1) -autorecon2
   recon-all -s $(basename ${T1_IMAGE%.*.*})-oBET -sd $(dirname $1) -autorecon3
   exit
fi
if [[ $BET_METHOD == "3dSS" ]]; then
  # Check environment variables
  if [[ `which 3dSkullStrip` == "" ]]; then
    echo "3dSkullStrip may not be installed in the system. Check if AFNI is already installed."
    exit
  fi

  cd $(dirname $1)
  echo " --> Performing 3dSkullStrip (AFNI) brain extraction"
  SHRINK_BOT=`cat $(dirname $0)/config_variables.conf | grep SHRINK_BOT= | cut -c12-17`
  SHRINK_FAC=`cat $(dirname $0)/config_variables.conf | grep SHRINK_FAC= | cut -c12-17`
  PUSH_EDGE=`cat $(dirname $0)/config_variables.conf | grep PUSH_EDGE= | cut -c11-13`
  echo " Variables: "
  echo "   SHRINK_BOT=$SHRINK_BOT"
  echo "   SHRINK_FAC=$SHRINK_FAC"
  echo "   PUSH_EDGE=$PUSH_EDGE"

  if [[ "$PUSH_EDGE" == "Y" ]]; then
    3dSkullStrip -input $(basename ${T1_IMAGE%.*.*}).nii.gz -push_to_edge -shrink_fac_bot_lim $SHRINK_BOT -shrink_fac $SHRINK_FAC
  else
    3dSkullStrip -input $(basename ${T1_IMAGE%.*.*}).nii.gz -shrink_fac_bot_lim $SHRINK_BOT -shrink_fac $SHRINK_FAC
  fi

  3dAFNItoNIFTI skull_strip_out+orig.BRIK
  # Cleaning trash files
  rm *.BRIK *.HEAD

  #Transforming the output as binary brain mask
  fslmaths skull_strip_out.nii -bin skull_strip_out.nii
  mv skull_strip_out.nii.gz $(basename ${T1_IMAGE%.*.*})_3dSS_pushEdge${PUSH_EDGE}_shrFact${SHRINK_FAC}_shrBot${SHRINK_BOT}.nii.gz
  rm skull_strip_out.nii

  echo " --> Correcting mask"
  fslmaths $(basename ${T1_IMAGE%.*.*})_3dSS_pushEdge${PUSH_EDGE}_shrFact${SHRINK_FAC}_shrBot${SHRINK_BOT}.nii.gz -kernel sphere 3 -dilM -fillh -ero $(basename ${T1_IMAGE%.*.*})_3dSS_pushEdge${PUSH_EDGE}_shrFact${SHRINK_FAC}_shrBot${SHRINK_BOT}.nii
  fslmaths $(basename ${T1_IMAGE%.*.*})_3dSS_pushEdge${PUSH_EDGE}_shrFact${SHRINK_FAC}_shrBot${SHRINK_BOT}.nii.gz -kernel sphere 2 -dilM $(basename ${T1_IMAGE%.*.*})_3dSS_pushEdge${PUSH_EDGE}_shrFact${SHRINK_FAC}_shrBot${SHRINK_BOT}.nii.gz

  echo " --> Adapting and performing FreeSurfer recon-all"
  MASK_IMAGE=$(basename ${T1_IMAGE%.*.*})_3dSS_pushEdge${PUSH_EDGE}_shrFact${SHRINK_FAC}_shrBot${SHRINK_BOT}.nii.gz

  #Run the first part of FreeSurfer pipeline - autorecon1 -noskullstrip
  recon-all -s $(basename ${T1_IMAGE%.*.*})-3dSS -sd $(dirname $1) -i $T1_IMAGE -autorecon1 -noskullstrip

  WHOLE_T1_FOLDER=$(basename ${T1_IMAGE%.*.*})-3dSS/mri/
  mri_convert -it mgz -ot nii $WHOLE_T1_FOLDER/T1.mgz $WHOLE_T1_FOLDER/T1.nii
  gzip -9 $WHOLE_T1_FOLDER/T1.nii
  mri_convert -it nii -ot nii $MASK_IMAGE $MASK_IMAGE --conform
  #Effectivelly performing the skull strip on T1 image
  fslmaths $WHOLE_T1_FOLDER/T1.nii.gz -mas $MASK_IMAGE $WHOLE_T1_FOLDER/brainmask.auto.nii.gz
  gzip -d $WHOLE_T1_FOLDER/brainmask.auto.nii.gz
  mri_convert -it nii -ot mgz $WHOLE_T1_FOLDER/brainmask.auto.nii $WHOLE_T1_FOLDER/brainmask.auto.mgz
  cp $WHOLE_T1_FOLDER/brainmask.auto.mgz $WHOLE_T1_FOLDER/brainmask.mgz

  #Running the rest of FreeSurfer pipeline
  recon-all -s $(basename ${T1_IMAGE%.*.*})-3dSS -sd $(dirname $1) -autorecon2
  recon-all -s $(basename ${T1_IMAGE%.*.*})-3dSS -sd $(dirname $1) -autorecon3
  exit
fi
if [[ $BET_METHOD == "BET" ]]; then
  # Check environment variables
  if [[ `which bet` == "" ]]; then
    echo "BET may not be installed in the system. Check if FSL is installed."
    exit
  fi

  cd $(dirname $1)
  echo " --> Performing FSL-BET brain extraction"
  F_THR=`cat $(dirname $0)/config_variables.conf | grep F_THR= | cut -c7-11`
  NECK_CLEAN=`cat $(dirname $0)/config_variables.conf | grep NECK_CLEAN= | cut -c12-13`
  EYE_CLEAN=`cat $(dirname $0)/config_variables.conf | grep EYE_CLEAN= | cut -c11-12`
  echo " Variables: "
  echo "   F_THR=$F_THR"
  echo "   NECK_CLEAN=$NECK_CLEAN"
  echo "   EYE_CLEAN=$EYE_CLEAN"

  #Apply FSL-BET
  if [[ $NECK_CLEAN == "N" && $EYE_CLEAN == "N" ]]; then
  bet ${T1_IMAGE} $(basename ${T1_IMAGE%.*.*})_bet_f${F_THR}_neck${NECK_CLEAN}_eye${EYE_CLEAN} -f $F_THR
  elif [[ $NECK_CLEAN == "Y" && $EYE_CLEAN == "N" ]]; then
  bet ${T1_IMAGE} $(basename ${T1_IMAGE%.*.*})_bet_f${F_THR}_neck${NECK_CLEAN}_eye${EYE_CLEAN} -f $F_THR -B
  elif [[ $NECK_CLEAN == "N" && $EYE_CLEAN == "Y" ]]; then
  bet ${T1_IMAGE} $(basename ${T1_IMAGE%.*.*})_bet_f${F_THR}_neck${NECK_CLEAN}_eye${EYE_CLEAN} -f $F_THR -S
  elif [[ $NECK_CLEAN == "Y" && $EYE_CLEAN == "Y" ]]; then
  bet ${T1_IMAGE} $(basename ${T1_IMAGE%.*.*})_bet_f${F_THR}_neck${NECK_CLEAN}_eye${EYE_CLEAN} -f $F_THR -S -B
  fi

  #Transforming the output as binary brain mask
  fslmaths $(basename ${T1_IMAGE%.*.*})_bet_f${F_THR}_neck${NECK_CLEAN}_eye${EYE_CLEAN}.nii.gz -bin $(basename ${T1_IMAGE%.*.*})_bet_f${F_THR}_neck${NECK_CLEAN}_eye${EYE_CLEAN}.nii.gz

  echo " --> Adapting and performing FreeSurfer recon-all"
  MASK_IMAGE=$(basename ${T1_IMAGE%.*.*})_bet_f${F_THR}_neck${NECK_CLEAN}_eye${EYE_CLEAN}.nii.gz

  #Run the first part of FreeSurfer pipeline - autorecon1 -noskullstrip
  recon-all -s $(basename ${T1_IMAGE%.*.*})-BET -sd $(dirname $1) -i $T1_IMAGE -autorecon1 -noskullstrip

  WHOLE_T1_FOLDER=$(basename ${T1_IMAGE%.*.*})-BET/mri/
  mri_convert -it mgz -ot nii $WHOLE_T1_FOLDER/T1.mgz $WHOLE_T1_FOLDER/T1.nii
  gzip -9 $WHOLE_T1_FOLDER/T1.nii
  mri_convert -it nii -ot nii $MASK_IMAGE $MASK_IMAGE --conform
  #Effectivelly performing the skull strip on T1 image
  fslmaths $WHOLE_T1_FOLDER/T1.nii.gz -mas $MASK_IMAGE $WHOLE_T1_FOLDER/brainmask.auto.nii.gz
  gzip -d $WHOLE_T1_FOLDER/brainmask.auto.nii.gz
  mri_convert -it nii -ot mgz $WHOLE_T1_FOLDER/brainmask.auto.nii $WHOLE_T1_FOLDER/brainmask.auto.mgz
  cp $WHOLE_T1_FOLDER/brainmask.auto.mgz $WHOLE_T1_FOLDER/brainmask.mgz

  #Running the rest of FreeSurfer pipeline
  recon-all -s $(basename ${T1_IMAGE%.*.*})-BET -sd $(dirname $1) -autorecon2
  recon-all -s $(basename ${T1_IMAGE%.*.*})-BET -sd $(dirname $1) -autorecon3
  exit
fi
if [[ $BET_METHOD == "ROBEX" ]]; then
  # Check environment variables
  if [[ `which ROBEX` == "" ]]; then
    echo "ROBEX may not be installed in the system. Check if exist the ROBEX environment variable."
    exit
  fi

  cd $(dirname $1)
  echo " --> Performing ROBEX brain extraction"
  runROBEX.sh ${T1_IMAGE} $(basename ${T1_IMAGE%.*.*})_ROBEX.nii.gz

  #Transforming the output as binary brain mask
  fslmaths $(basename ${T1_IMAGE%.*.*})_ROBEX.nii.gz -bin $(basename ${T1_IMAGE%.*.*})_ROBEX.nii.gz

  echo " --> Adapting and performing FreeSurfer recon-all"
  MASK_IMAGE=$(basename ${T1_IMAGE%.*.*})_ROBEX.nii.gz

  #Run the first part of FreeSurfer pipeline - autorecon1 -noskullstrip
  recon-all -s $(basename ${T1_IMAGE%.*.*})-ROBEX -sd $(dirname $1) -i $T1_IMAGE -autorecon1 -noskullstrip

  WHOLE_T1_FOLDER=$(basename ${T1_IMAGE%.*.*})-ROBEX/mri/
  mri_convert -it mgz -ot nii $WHOLE_T1_FOLDER/T1.mgz $WHOLE_T1_FOLDER/T1.nii
  gzip -9 $WHOLE_T1_FOLDER/T1.nii
  mri_convert -it nii -ot nii $MASK_IMAGE $MASK_IMAGE --conform
  #Effectivelly performing the skull strip on T1 image
  fslmaths $WHOLE_T1_FOLDER/T1.nii.gz -mas $MASK_IMAGE $WHOLE_T1_FOLDER/brainmask.auto.nii.gz
  gzip -d $WHOLE_T1_FOLDER/brainmask.auto.nii.gz
  mri_convert -it nii -ot mgz $WHOLE_T1_FOLDER/brainmask.auto.nii $WHOLE_T1_FOLDER/brainmask.auto.mgz
  cp $WHOLE_T1_FOLDER/brainmask.auto.mgz $WHOLE_T1_FOLDER/brainmask.mgz

  #Running the rest of FreeSurfer pipeline
  recon-all -s $(basename ${T1_IMAGE%.*.*})-ROBEX -sd $(dirname $1) -autorecon2
  recon-all -s $(basename ${T1_IMAGE%.*.*})-ROBEX -sd $(dirname $1) -autorecon3
  exit
fi

echo "ERROR: Brain extraction method not found. Try a different option: [BET|3dSS|oBET|ROBEX]"
